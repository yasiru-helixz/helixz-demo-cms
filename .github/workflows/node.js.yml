name: Node.js CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm i
    - run: npm run build --if-present
    - run: |
        touch .env
        echo "HOST=${{ secrets.HOST }}" > .env
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "APP_KEYS=${{ secrets.APP_KEYS }}" >> .env
        echo "API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}" >> .env
        echo "ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}" > .env
        echo "TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}" >> .env
        echo "DATABASE_CLIENT=${{ secrets.DATABASE_CLIENT }}" >> .env
        echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
        echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
        echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
        echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
        echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
        echo "DATABASE_SSL=${{ secrets.DATABASE_SSL }}" >> .env
        echo "DATABASE_FILENAME=${{ secrets.DATABASE_FILENAME }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
