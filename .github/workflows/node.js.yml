name: Node.js CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npm install
      - run: npm run build --if-present

      - name: Create .env file
        run: |
          touch .env
          echo "HOST=${{ secrets.HOST }}" > .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "APP_KEYS=${{ secrets.APP_KEYS }}" >> .env
          echo "API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}" >> .env
          echo "ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}" >> .env
          echo "TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}" >> .env
          echo "DATABASE_CLIENT=${{ secrets.DATABASE_CLIENT }}" >> .env
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_SSL=${{ secrets.DATABASE_SSL }}" >> .env
          echo "DATABASE_FILENAME=${{ secrets.DATABASE_FILENAME }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.EC2_HOST }} "mkdir -p /home/ubuntu/app/"
          scp -o StrictHostKeyChecking=no -i private_key.pem -r .env build/ ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/app/

      - name: Restart Application
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/app/
            npm install --production
            pm2 restart app || pm2 start npm --name "app" -- start
          EOF
